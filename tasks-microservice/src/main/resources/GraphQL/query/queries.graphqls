type Query {

    #------------ tasks ----------------
    retrieveTasks (first: Int!, after: ID, status: TaskStatus, layer: TaskLayer, id: ID, rangeStart: DateTime, rangeEnd: DateTime): TaskConnection @connection(for: "Task")
    findTask(input: ID!): Task
    countTasks(status: TaskStatus, layer: TaskLayer, id: ID): Int
    searchTasks (input: String!, first: Int!, after: ID, status: TaskStatus, layer: TaskLayer, id: ID, rangeStart: DateTime, rangeEnd: DateTime): TaskConnection @connection(for: "Task")
    findTaskOrder (id: ID!): Order
    findTaskItem (id: ID!): Item
    findTaskOperation (id: ID!): Operation
    findTaskWorkcenter (id: ID!): Workcenter
    retrieveTaskUsers (id: ID!, first: Int!, after: ID): UserConnection @connection(for: "User")
    retrieveTaskTechnologies(id: ID!, first: Int!, after: ID): TechnologyConnection @connection(for: "Technology")
    retrieveTaskComments (id: ID!, first: Int!, after: ID, layer: CommentLayer): CommentConnection @connection(for: "Comment")
    retrieveTaskWorklogs(id: ID!, first: Int!, after: ID): WorklogConnection @connection(for: "Worklog")


    #------------ task_set ----------------
    retrieveTaskSets (first: Int!, id: ID, after: ID, rangeStart: DateTime, rangeEnd: DateTime): TaskSetConnection @connection(for: "TaskSet")
    findTaskSet(input: ID!): TaskSet
    countTaskSets: Int
    retrieveTaskSetUsers (id: ID!, first: Int!, after: ID): UserConnection @connection(for: "User")
    retrieveTaskSet_Tasks (id: ID!, first: Int!, after: ID): TaskConnection @connection(for: "Task")
    retrieveTaskSetComments (id: ID!, first: Int!, after: ID, layer: CommentLayer): CommentConnection @connection(for: "Comment")


    #------------ comment ----------------
    findCommentReporter (id: ID!): User
    countComments (hostId: ID!, layer: CommentLayer): Int


    #------------ users ----------------
    retrieveUsersActivities(first: Int!, after: ID, layer: UserActivityLayer!, rangeStart: DateTime!, rangeEnd: DateTime!): UserConnection @connection(for: "User")
    findUserWorkload (id: ID!, rangeStart: DateTime!, rangeEnd: DateTime!): Float

    #------------ gantt ----------------
    retrieveGantt(id: ID!): [GanttData]

    #------------ workcenter ----------------
    findWorkcenterWorkload (id: ID!, rangeStart: DateTime!, rangeEnd: DateTime!): Float
}