type Query {

    #------------------------ orders -------------------------

    retrieveOrders (first: Int!, after: ID, status: OrderStatus, layer: OrderLayer): OrderConnection @connection(for: "Order")
    searchOrders (input: String!, first: Int!, after: ID, status: OrderStatus, layer: OrderLayer): OrderConnection @connection(for: "Order")
    searchOrdersGlobal (id: ID!, input: [String!]!, first: Int!, after: ID): OrderSearchInstance
    findOrder (input: ID!): Order
    retrieveOrderItems (id: ID!, first: Int!, parentId: ID, after: ID): ItemConnection @connection(for: "Item")
    retrieveOrderTasks (id: ID!, first: Int!, parentId: ID, after: ID): TaskConnection @connection(for: "Task")
    retrieveOrderTechnologies (id: ID!, first: Int!, parentId: ID, after: ID): TechnologyConnection @connection(for: "Technology")
    retrieveOrderParameters (id: ID!, first: Int!, after: ID): ParameterConnection @connection(for: "Parameter")
    retrieveOrderCategories (id: ID!, first: Int!, after: ID): ItemCategoryConnection @connection(for: "ItemCategory")
    retrieveOrderWorklogs (id: ID!, first: Int!, after: ID, rangeStart: DateTime, rangeEnd: DateTime): WorklogConnection @connection(for: "Worklog")
    findOrderCustomer (id: ID!): Customer
    findOrderAgent(id: ID!): Agent
    findOrderItem(id: ID!): Item
    findOrderTask(id: ID!): Task
    findOrderManager(id: ID!): Agent
    findOrder__Type(id: ID!): OrderType
    #this is related to the type in the order instanceÂ¬
    countOrders(status: OrderStatus): Int
    potentialReferenceNumber: String

    findOrderStatistics (id: ID!): OrderStatistics
    retrieveOrderDepartmentStatistics (id: ID!, first: Int!, after: ID): DepartmentStatisticsConnection @connection(for: "DepartmentStatistics")
    retrieveOrderItemCategoryStatistics (id: ID!, first: Int!, after: ID): ItemCategoryStatisticsConnection @connection(for: "ItemCategoryStatistics")

    #------------------------ customers -----------------------

    retrieveCustomers (first: Int!, after: ID): CustomerConnection @connection(for: "Customer")
    findCustomer(input: ID!): Customer
    countCustomers: Int
    searchCustomers (input: String!, first: Int!, after: ID): CustomerConnection @connection(for: "Customer")
    retrieveCustomerEntities(id: ID!, first: Int!, after: ID): CustomerConnection @connection(for: "Customer")

    #------------------------ types of orders -------------------

    retrieveOrderTypes (first: Int!, after: ID): OrderTypeConnection @connection(for: "OrderType")
    findOrderType(input: ID!): OrderType
    countOrderTypes: Int
    searchOrderTypes (input: String!, first: Int!, after: ID): OrderTypeConnection @connection(for: "OrderType")

    #------------------------ tasks -------------------

    retrieveTaskDepartments (id: ID!, first: Int!, after: ID): DepartmentConnection @connection(for: "Department")
    findTaskOperation(input: ID!): Operation
    findTaskItem(input: ID!): Item
    retrieveTaskParameters (id: ID!, first: Int!, after: ID): ParameterConnection @connection(for: "Parameter")

    #------------------------ items --------------------
    findItemStatistics(input: ID!): ItemStatistics
    findItemWhoAdded(input: ID!): User
    retrieveItemTechnologies (id: ID!, first: Int!, after: ID): TechnologyConnection @connection(for: "Technology")
    buildItemElk(from: ID, orderId: ID, height: Int!, width: Int!): ElkGraphItem!
    retrieveItemParameters (id: ID!, first: Int!, after: ID): ParameterConnection @connection(for: "Parameter")


}